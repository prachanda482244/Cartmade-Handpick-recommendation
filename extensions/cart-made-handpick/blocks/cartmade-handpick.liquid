<style>
  /* Styles for container and grid */
  .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 20px;
  }

  .grid-view {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    gap: 20px;
    margin: 20px;
    width: 100%;
    max-width: 1200px;
  }

  .grid-item {
    flex: 1 1 100%; /* Default to full width */
    background-color: #fff;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    padding: 15px;
    text-align: center;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .grid-item:hover {
    transform: translateY(-10px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  }

  .grid-item .contain {
    position: relative;
    overflow: hidden;
    flex: 1;
  }

  .grid-item img {
    height: 100%;
    max-height: 220px;
    object-fit: cover;
    object-position: top;
    transition: transform 0.3s ease;
  }

  .grid-item:hover img {
    transform: scale(1.05);
  }

  .grid-item h3 {
    font-size: 1.1em;
    margin: 10px 0;
    color: #333;
  }

  .grid-item .price {
    font-size: 1.2em;
    color: #ff6600;
    font-weight: bold;
    margin-top: auto; /* Pushes to the bottom */
  }

  .vendor {
    font-size: 12px;
    text-transform: capitalize;
    font-weight: 400;
    margin-top: 5px;
  }

  .btn {
    padding: 6px 10px;
    border-radius: 10px;
    background-color: black;
    color: white;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .btn:hover {
    background-color: #333;
  }

  /* Responsive layout based on items per row */
  @media (min-width: 600px) {
    .grid-item {
      flex-basis: calc(50% - 20px); /* Two items per row */
    }
  }

  @media (min-width: 900px) {
    .grid-item {
      flex-basis: calc(33.33% - 20px); /* Three items per row */
    }
  }

  @media (min-width: 1200px) {
    .grid-item {
      flex-basis: calc(25% - 20px); /* Four items per row */
    }
  }
</style>

<div class="container">
  <h1>Recommended Products!</h1>

  <div class="grid-view">
    {% assign recommended_products = product.metafields.custom.recommended_produccts.value %}
    {% assign items_per_row = block.settings.items_per_row %}
    
    {% for product in recommended_products %}
      {% if product %}
        <div class="grid-item">
          <div class="contain">
            <img src="{{ product.featured_image | img_url }}" alt="{{ product.title }}">
          </div>
          <h3>{{ product.title }}</h3>
          <p class="price">{{ product.price | money }}</p>
          
          <div class="item-wrapper">
            {% if block.settings.show_vendor %}
              <p class="vendor"> {{ product.vendor }}</p>
            {% endif %}

            {% if block.settings.show_add_to_cart %}
              <button class="btn">Add to Cart</button>
            {% endif %}
          </div>
        </div>
      {% else %}
        <div class="grid-item">
          <p>Product data not available</p>
        </div>
      {% endif %}
      
      {% comment %}
        After displaying items_per_row items in the first row,
        start a new row for the remaining items.
      {% endcomment %}
      {% assign items_displayed = forloop.index %}
      {% if items_displayed == items_per_row %}
        </div><div class="grid-view">
      {% endif %}
    {% endfor %}
  </div>
</div>

{% schema %}
{
  "name": "Product Grid Section",
  "target": "section",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show Vendor",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_add_to_cart",
      "label": "Show Add to Cart Button",
      "default": true
    },
    {
      "type": "radio",
      "id": "grid_type",
      "label": "Grid Layout",
      "options": [
        { "value": "slider", "label": "Slider" },
        { "value": "static", "label": "Static Grid" }
      ],
      "default": "slider"
    },
    {
      "type": "range",
      "id": "items_per_row",
      "label": "Items Per Row",
      "step": 1,
      "min": 2,
      "max": 4,
      "default": 3
    },
    {
      "type": "range",
      "id": "number_of_rows",
      "label": "Number of Rows",
      "step": 1,
      "min": 1,
      "max": 4,
      "default": 2
    }
  ]
}
{% endschema %}
